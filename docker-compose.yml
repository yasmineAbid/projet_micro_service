version: '3.8'

services:
  eureka-server:
    build:
      context: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - spring-net

  medecin-db:
    image: mysql:8
    container_name: medecin-db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: medecindb
    ports:
      - "3306:3306"
    networks:
      - spring-net

  patient-db:
    image: mongo:6
    container_name: patient-db
    ports:
      - "27017:27017"
    networks:
      - spring-net

  medecin-service:
    build:
      context: ./medecin
    container_name: medecin-service
    depends_on:
      - eureka-server
      - medecin-db
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://medecin-db:3306/medecindb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD:
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8089:8089"
    networks:
      - spring-net
    restart: on-failure

  patient-service:
    build:
      context: ./patient
    container_name: patient-service
    depends_on:
      - eureka-server
      - patient-db
      - kafka
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://patient-db:27017/patient_db
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "9090:9090"
    networks:
      - spring-net
    restart: on-failure

  gateway-service:
    build:
      context: ./gateway
    container_name: gateway-service
    depends_on:
      - eureka-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    ports:
      - "8081:8081"
    networks:
      - spring-net
    restart: on-failure

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - spring-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper
    networks:
      - spring-net

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka
    networks:
      - spring-net

networks:
  spring-net:
    driver: bridge
